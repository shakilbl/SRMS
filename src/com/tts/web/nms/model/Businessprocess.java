package com.tts.web.nms.model;
// Generated Aug 31, 2016 5:48:42 PM by Hibernate Tools 5.1.0.Alpha1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * Businessprocess generated by hbm2java
 */
@Entity
@Table(name = "businessprocess", catalog = "SRMSDB")
public class Businessprocess implements java.io.Serializable {

	private Integer businessProcessId;
	private String name;
	private String active;
	private String createdBy;
	private Date createdDate;
	private String updatedBy;
	private Date updatedDate;
	private Set<Usergroupbusinessprocessmap> usergroupbusinessprocessmaps = new HashSet<Usergroupbusinessprocessmap>(0);
	private Set<Issuesolutioncategorymap> issuesolutioncategorymaps = new HashSet<Issuesolutioncategorymap>(0);
	private Set<Wfheader> wfheaders = new HashSet<Wfheader>(0);

	public Businessprocess() {
	}

	public Businessprocess(String name, String active, String createdBy, Date createdDate, String updatedBy,
			Date updatedDate, Set<Usergroupbusinessprocessmap> usergroupbusinessprocessmaps,
			Set<Issuesolutioncategorymap> issuesolutioncategorymaps, Set<Wfheader> wfheaders) {
		this.name = name;
		this.active = active;
		this.createdBy = createdBy;
		this.createdDate = createdDate;
		this.updatedBy = updatedBy;
		this.updatedDate = updatedDate;
		this.usergroupbusinessprocessmaps = usergroupbusinessprocessmaps;
		this.issuesolutioncategorymaps = issuesolutioncategorymaps;
		this.wfheaders = wfheaders;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "BusinessProcessID", unique = true, nullable = false)
	public Integer getBusinessProcessId() {
		return this.businessProcessId;
	}

	public void setBusinessProcessId(Integer businessProcessId) {
		this.businessProcessId = businessProcessId;
	}

	@Column(name = "Name", length = 200)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "Active", length = 50)
	public String getActive() {
		return this.active;
	}

	public void setActive(String active) {
		this.active = active;
	}

	@Column(name = "CreatedBy", length = 100)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CreatedDate", length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "UpdatedBy", length = 100)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UpdatedDate", length = 19)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "businessprocess")
	@JsonIgnore
	public Set<Usergroupbusinessprocessmap> getUsergroupbusinessprocessmaps() {
		return this.usergroupbusinessprocessmaps;
	}

	public void setUsergroupbusinessprocessmaps(Set<Usergroupbusinessprocessmap> usergroupbusinessprocessmaps) {
		this.usergroupbusinessprocessmaps = usergroupbusinessprocessmaps;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "businessprocess")
	@JsonIgnore
	public Set<Issuesolutioncategorymap> getIssuesolutioncategorymaps() {
		return this.issuesolutioncategorymaps;
	}

	public void setIssuesolutioncategorymaps(Set<Issuesolutioncategorymap> issuesolutioncategorymaps) {
		this.issuesolutioncategorymaps = issuesolutioncategorymaps;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "businessprocess")
	@JsonIgnore
	public Set<Wfheader> getWfheaders() {
		return this.wfheaders;
	}

	public void setWfheaders(Set<Wfheader> wfheaders) {
		this.wfheaders = wfheaders;
	}

}

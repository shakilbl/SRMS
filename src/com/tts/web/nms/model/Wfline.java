package com.tts.web.nms.model;
// Generated Jun 5, 2016 4:28:34 PM by Hibernate Tools 5.1.0.Alpha1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * Wfline generated by hbm2java
 */
@Entity
@Table(name = "wfline", catalog = "SRMSDB")
public class Wfline implements java.io.Serializable {

	private Integer wflineId;
	private Usergroup usergroup;
	private Wfheader wfheader;
	private int lineNo;
	private String descriptions;
	private String createdby;
	private Date createddate;
	private String updatedby;
	private Date updateddate;
	private Set<Tickethops> tickethopses = new HashSet<Tickethops>(0);

	public Wfline() {
	}

	public Wfline(Usergroup usergroup, Wfheader wfheader, int lineNo) {
		this.usergroup = usergroup;
		this.wfheader = wfheader;
		this.lineNo = lineNo;
	}

	public Wfline(Usergroup usergroup, Wfheader wfheader, int lineNo, String descriptions, String createdby,
			Date createddate, String updatedby, Date updateddate, Set<Tickethops> tickethopses) {
		this.usergroup = usergroup;
		this.wfheader = wfheader;
		this.lineNo = lineNo;
		this.descriptions = descriptions;
		this.createdby = createdby;
		this.createddate = createddate;
		this.updatedby = updatedby;
		this.updateddate = updateddate;
		this.tickethopses = tickethopses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "WFLineID", unique = true, nullable = false)
	public Integer getWflineId() {
		return this.wflineId;
	}

	public void setWflineId(Integer wflineId) {
		this.wflineId = wflineId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "UserGroupID", nullable = false)
	public Usergroup getUsergroup() {
		return this.usergroup;
	}

	public void setUsergroup(Usergroup usergroup) {
		this.usergroup = usergroup;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "WFHeaderID", nullable = false)
	public Wfheader getWfheader() {
		return this.wfheader;
	}

	public void setWfheader(Wfheader wfheader) {
		this.wfheader = wfheader;
	}

	@Column(name = "LineNo", nullable = false)
	public int getLineNo() {
		return this.lineNo;
	}

	public void setLineNo(int lineNo) {
		this.lineNo = lineNo;
	}

	@Column(name = "Descriptions", length = 100)
	public String getDescriptions() {
		return this.descriptions;
	}

	public void setDescriptions(String descriptions) {
		this.descriptions = descriptions;
	}

	@Column(name = "Createdby", length = 100)
	public String getCreatedby() {
		return this.createdby;
	}

	public void setCreatedby(String createdby) {
		this.createdby = createdby;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Createddate", length = 19)
	public Date getCreateddate() {
		return this.createddate;
	}

	public void setCreateddate(Date createddate) {
		this.createddate = createddate;
	}

	@Column(name = "Updatedby", length = 100)
	public String getUpdatedby() {
		return this.updatedby;
	}

	public void setUpdatedby(String updatedby) {
		this.updatedby = updatedby;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Updateddate", length = 19)
	public Date getUpdateddate() {
		return this.updateddate;
	}

	public void setUpdateddate(Date updateddate) {
		this.updateddate = updateddate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "wfline")
	@JsonIgnore
	public Set<Tickethops> getTickethopses() {
		return this.tickethopses;
	}

	public void setTickethopses(Set<Tickethops> tickethopses) {
		this.tickethopses = tickethopses;
	}

}

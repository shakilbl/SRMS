package com.tts.web.nms.model;
// Generated Jun 23, 2016 1:48:44 PM by Hibernate Tools 5.1.0.Alpha1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * Tickethops generated by hbm2java
 */
@Entity
@Table(name = "tickethops", catalog = "SRMSDB")
public class Tickethops implements java.io.Serializable {

	private Integer ticketHopsId;
	private Issuesolutioncategorymap issuesolutioncategorymap;
	private Ticketsummary ticketsummary;
	private Usergroup usergroupByNextUserGroupId;
	private Usergroup usergroupByPreviousUserGroupId;
	private Wfheader wfheader;
	private Wfline wfline;
	private String ticketNumber;
	private String isSubGroupSelected;
	private Date divisionE2esladate;
	private Date groupSladate;
	private Integer groupSlainHour;
	private String groupSlastatus;
	private String status;
	private String userDivision;
	private String massTag;
	private String massTagStatus;
	private String needFeedback;
	private String taskCreatedBy;
	private Date taskCreationDate;
	private String taskCompletedby;
	private Date taskCompletionDate;
	private String isLocked;
	private String lockedBy;
	private Integer wflineNo;
	private Integer subGroupParentHopId;
	private String customerCommunication;
	private Date feedbackDate;
	private String selectedSolution;
	private String solutionConstraint;
	private String trackReOpen;
	private Set<Ticketcomments> ticketcommentses = new HashSet<Ticketcomments>(0);

	public Tickethops() {
	}

	public Tickethops(Issuesolutioncategorymap issuesolutioncategorymap, Ticketsummary ticketsummary,
			Usergroup usergroupByNextUserGroupId, Usergroup usergroupByPreviousUserGroupId, Wfheader wfheader,
			Wfline wfline, String ticketNumber, String isSubGroupSelected, Date divisionE2esladate, Date groupSladate,
			Integer groupSlainHour, String groupSlastatus, String status, String userDivision, String massTag,
			String massTagStatus, String needFeedback, String taskCreatedBy, Date taskCreationDate,
			String taskCompletedby, Date taskCompletionDate, String isLocked, String lockedBy, Integer wflineNo,
			Integer subGroupParentHopId, String customerCommunication, Date feedbackDate, String selectedSolution,
			String solutionConstraint, String trackReOpen, Set<Ticketcomments> ticketcommentses) {
		this.issuesolutioncategorymap = issuesolutioncategorymap;
		this.ticketsummary = ticketsummary;
		this.usergroupByNextUserGroupId = usergroupByNextUserGroupId;
		this.usergroupByPreviousUserGroupId = usergroupByPreviousUserGroupId;
		this.wfheader = wfheader;
		this.wfline = wfline;
		this.ticketNumber = ticketNumber;
		this.isSubGroupSelected = isSubGroupSelected;
		this.divisionE2esladate = divisionE2esladate;
		this.groupSladate = groupSladate;
		this.groupSlainHour = groupSlainHour;
		this.groupSlastatus = groupSlastatus;
		this.status = status;
		this.userDivision = userDivision;
		this.massTag = massTag;
		this.massTagStatus = massTagStatus;
		this.needFeedback = needFeedback;
		this.taskCreatedBy = taskCreatedBy;
		this.taskCreationDate = taskCreationDate;
		this.taskCompletedby = taskCompletedby;
		this.taskCompletionDate = taskCompletionDate;
		this.isLocked = isLocked;
		this.lockedBy = lockedBy;
		this.wflineNo = wflineNo;
		this.subGroupParentHopId = subGroupParentHopId;
		this.customerCommunication = customerCommunication;
		this.feedbackDate = feedbackDate;
		this.ticketcommentses = ticketcommentses;
		this.selectedSolution = selectedSolution;
		this.solutionConstraint = solutionConstraint;
		this.trackReOpen = trackReOpen;
	}

	public Tickethops(Tickethops tickethops) {
		this.issuesolutioncategorymap = tickethops.issuesolutioncategorymap;
		this.ticketsummary = tickethops.ticketsummary;
		this.usergroupByNextUserGroupId = tickethops.usergroupByNextUserGroupId;
		this.usergroupByPreviousUserGroupId = tickethops.usergroupByPreviousUserGroupId;
		this.wfheader = tickethops.wfheader;
		this.wfline = tickethops.wfline;
		this.ticketNumber = tickethops.ticketNumber;
		this.isSubGroupSelected = tickethops.isSubGroupSelected;
		this.divisionE2esladate = tickethops.divisionE2esladate;
		this.groupSladate = tickethops.groupSladate;
		this.groupSlainHour = tickethops.groupSlainHour;
		this.groupSlastatus = tickethops.groupSlastatus;
		this.status = tickethops.status;
		this.userDivision = tickethops.userDivision;
		this.massTag = tickethops.massTag;
		this.massTagStatus = tickethops.massTagStatus;
		this.needFeedback = tickethops.needFeedback;
		this.taskCreatedBy = tickethops.taskCreatedBy;
		this.taskCreationDate = tickethops.taskCreationDate;
		this.taskCompletedby = tickethops.taskCompletedby;
		this.taskCompletionDate = tickethops.taskCompletionDate;
		this.isLocked = tickethops.isLocked;
		this.lockedBy = tickethops.lockedBy;
		this.wflineNo = tickethops.wflineNo;
		this.subGroupParentHopId = tickethops.subGroupParentHopId;
		this.customerCommunication = tickethops.customerCommunication;
		this.feedbackDate = tickethops.feedbackDate;
		this.ticketcommentses = tickethops.ticketcommentses;
		this.selectedSolution = tickethops.selectedSolution;
		this.solutionConstraint = tickethops.solutionConstraint;
		this.trackReOpen = tickethops.trackReOpen;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "TicketHopsID", unique = true, nullable = false)
	public Integer getTicketHopsId() {
		return this.ticketHopsId;
	}

	public void setTicketHopsId(Integer ticketHopsId) {
		this.ticketHopsId = ticketHopsId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "IssueSolutionCategoryMapID")
	public Issuesolutioncategorymap getIssuesolutioncategorymap() {
		return this.issuesolutioncategorymap;
	}

	public void setIssuesolutioncategorymap(Issuesolutioncategorymap issuesolutioncategorymap) {
		this.issuesolutioncategorymap = issuesolutioncategorymap;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "TicketSummaryID")
	public Ticketsummary getTicketsummary() {
		return this.ticketsummary;
	}

	public void setTicketsummary(Ticketsummary ticketsummary) {
		this.ticketsummary = ticketsummary;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "NextUserGroupID")
	public Usergroup getUsergroupByNextUserGroupId() {
		return this.usergroupByNextUserGroupId;
	}

	public void setUsergroupByNextUserGroupId(Usergroup usergroupByNextUserGroupId) {
		this.usergroupByNextUserGroupId = usergroupByNextUserGroupId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "PreviousUserGroupID")
	public Usergroup getUsergroupByPreviousUserGroupId() {
		return this.usergroupByPreviousUserGroupId;
	}

	public void setUsergroupByPreviousUserGroupId(Usergroup usergroupByPreviousUserGroupId) {
		this.usergroupByPreviousUserGroupId = usergroupByPreviousUserGroupId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "WFHeaderID")
	public Wfheader getWfheader() {
		return this.wfheader;
	}

	public void setWfheader(Wfheader wfheader) {
		this.wfheader = wfheader;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "WFHeaderLineID")
	public Wfline getWfline() {
		return this.wfline;
	}

	public void setWfline(Wfline wfline) {
		this.wfline = wfline;
	}

	@Column(name = "TicketNumber", length = 100)
	public String getTicketNumber() {
		return this.ticketNumber;
	}

	public void setTicketNumber(String ticketNumber) {
		this.ticketNumber = ticketNumber;
	}

	@Column(name = "IsSubGroupSelected", length = 20)
	public String getIsSubGroupSelected() {
		return this.isSubGroupSelected;
	}

	public void setIsSubGroupSelected(String isSubGroupSelected) {
		this.isSubGroupSelected = isSubGroupSelected;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DivisionE2ESLADate", length = 19)
	public Date getDivisionE2esladate() {
		return this.divisionE2esladate;
	}

	public void setDivisionE2esladate(Date divisionE2esladate) {
		this.divisionE2esladate = divisionE2esladate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "GroupSLADate", length = 19)
	public Date getGroupSladate() {
		return this.groupSladate;
	}

	public void setGroupSladate(Date groupSladate) {
		this.groupSladate = groupSladate;
	}

	@Column(name = "GroupSLAInHour")
	public Integer getGroupSlainHour() {
		return this.groupSlainHour;
	}

	public void setGroupSlainHour(Integer groupSlainHour) {
		this.groupSlainHour = groupSlainHour;
	}

	@Column(name = "GroupSLAStatus", length = 50)
	public String getGroupSlastatus() {
		return this.groupSlastatus;
	}

	public void setGroupSlastatus(String groupSlastatus) {
		this.groupSlastatus = groupSlastatus;
	}

	@Column(name = "Status", length = 100)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "UserDivision", length = 100)
	public String getUserDivision() {
		return this.userDivision;
	}

	public void setUserDivision(String userDivision) {
		this.userDivision = userDivision;
	}

	@Column(name = "MassTag", length = 200)
	public String getMassTag() {
		return this.massTag;
	}

	public void setMassTag(String massTag) {
		this.massTag = massTag;
	}

	@Column(name = "MassTagStatus", length = 50)
	public String getMassTagStatus() {
		return this.massTagStatus;
	}

	public void setMassTagStatus(String massTagStatus) {
		this.massTagStatus = massTagStatus;
	}

	@Column(name = "NeedFeedback", length = 20)
	public String getNeedFeedback() {
		return this.needFeedback;
	}

	public void setNeedFeedback(String needFeedback) {
		this.needFeedback = needFeedback;
	}

	@Column(name = "TaskCreatedBy", length = 100)
	public String getTaskCreatedBy() {
		return this.taskCreatedBy;
	}

	public void setTaskCreatedBy(String taskCreatedBy) {
		this.taskCreatedBy = taskCreatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "TaskCreationDate", length = 19)
	public Date getTaskCreationDate() {
		return this.taskCreationDate;
	}

	public void setTaskCreationDate(Date taskCreationDate) {
		this.taskCreationDate = taskCreationDate;
	}

	@Column(name = "TaskCompletedby", length = 100)
	public String getTaskCompletedby() {
		return this.taskCompletedby;
	}

	public void setTaskCompletedby(String taskCompletedby) {
		this.taskCompletedby = taskCompletedby;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "TaskCompletionDate", length = 19)
	public Date getTaskCompletionDate() {
		return this.taskCompletionDate;
	}

	public void setTaskCompletionDate(Date taskCompletionDate) {
		this.taskCompletionDate = taskCompletionDate;
	}

	@Column(name = "IsLocked", length = 20)
	public String getIsLocked() {
		return this.isLocked;
	}

	public void setIsLocked(String isLocked) {
		this.isLocked = isLocked;
	}

	@Column(name = "LockedBy", length = 100)
	public String getLockedBy() {
		return this.lockedBy;
	}

	public void setLockedBy(String lockedBy) {
		this.lockedBy = lockedBy;
	}

	@Column(name = "WFLineNo")
	public Integer getWflineNo() {
		return this.wflineNo;
	}

	public void setWflineNo(Integer wflineNo) {
		this.wflineNo = wflineNo;
	}

	@Column(name = "SubGroupParentHopID")
	public Integer getSubGroupParentHopId() {
		return this.subGroupParentHopId;
	}

	public void setSubGroupParentHopId(Integer subGroupParentHopId) {
		this.subGroupParentHopId = subGroupParentHopId;
	}

	@Column(name = "CustomerCommunication")
	public String getCustomerCommunication() {
		return this.customerCommunication;
	}

	public void setCustomerCommunication(String customerCommunication) {
		this.customerCommunication = customerCommunication;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "FeedbackDate", length = 19)
	public Date getFeedbackDate() {
		return this.feedbackDate;
	}

	public void setFeedbackDate(Date feedbackDate) {
		this.feedbackDate = feedbackDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tickethops")
	@JsonIgnore
	public Set<Ticketcomments> getTicketcommentses() {
		return this.ticketcommentses;
	}

	public void setTicketcommentses(Set<Ticketcomments> ticketcommentses) {
		this.ticketcommentses = ticketcommentses;
	}

	@Column(name = "SelectedSolution")
	public String getSelectedSolution() {
		return selectedSolution;
	}

	public void setSelectedSolution(String selectedSolution) {
		this.selectedSolution = selectedSolution;
	}

	@Column(name = "SolutionConstraint")
	public String getSolutionConstraint() {
		return solutionConstraint;
	}

	public void setSolutionConstraint(String solutionConstraint) {
		this.solutionConstraint = solutionConstraint;
	}

	public String getTrackReOpen() {
		return trackReOpen;
	}

	public void setTrackReOpen(String trackReOpen) {
		this.trackReOpen = trackReOpen;
	}
	

}

package com.tts.web.nms.model;
// Generated Aug 31, 2016 5:48:42 PM by Hibernate Tools 5.1.0.Alpha1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * Usergroup generated by hbm2java
 */
@Entity
@Table(name = "usergroup", catalog = "SRMSDB")
public class Usergroup implements java.io.Serializable {

	private Integer userGroupId;
	private String name;
	private String section;
	private String department;
	private String division;
	private String emailId;
	private String escalationEmailId;
	private String active;
	private String createdby;
	private Date createddate;
	private String updatedby;
	private Date updateddate;
	private Set<Tickethops> tickethopsesForNextUserGroupId = new HashSet<Tickethops>(0);
	private Set<Usergrouppageaccess> usergrouppageaccesses = new HashSet<Usergrouppageaccess>(0);
	private Set<Slatasklevel> slatasklevelsForGroupFrom = new HashSet<Slatasklevel>(0);
	private Set<Userbtobsubgroup> userbtobsubgroupsForMainUserGroupId = new HashSet<Userbtobsubgroup>(0);
	private Set<Slatasklevel> slatasklevelsForGroupTo = new HashSet<Slatasklevel>(0);
	private Set<Tickethops> tickethopsesForPreviousUserGroupId = new HashSet<Tickethops>(0);
	private Set<Userbtobsubgroup> userbtobsubgroupsForUserSubGroupId = new HashSet<Userbtobsubgroup>(0);
	private Set<Usergroupbusinessprocessmap> usergroupbusinessprocessmaps = new HashSet<Usergroupbusinessprocessmap>(0);
	private Set<Wfheader> wfheaders = new HashSet<Wfheader>(0);
	private Set<Userandusergroupmap> userandusergroupmaps = new HashSet<Userandusergroupmap>(0);
	private Set<Issuesolutionmappingusergroupemail> issuesolutionmappingusergroupemails = new HashSet<Issuesolutionmappingusergroupemail>(
			0);
	private Set<Wfline> wflines = new HashSet<Wfline>(0);

	public Usergroup() {
	}

	public Usergroup(String name, String escalationEmailId) {
		this.name = name;
		this.escalationEmailId = escalationEmailId;
	}

	public Usergroup(String name, String section, String department, String division, String emailId,
			String escalationEmailId, String active, String createdby, Date createddate, String updatedby,
			Date updateddate, Set<Tickethops> tickethopsesForNextUserGroupId,
			Set<Usergrouppageaccess> usergrouppageaccesses, Set<Slatasklevel> slatasklevelsForGroupFrom,
			Set<Userbtobsubgroup> userbtobsubgroupsForMainUserGroupId, Set<Slatasklevel> slatasklevelsForGroupTo,
			Set<Tickethops> tickethopsesForPreviousUserGroupId,
			Set<Userbtobsubgroup> userbtobsubgroupsForUserSubGroupId,
			Set<Usergroupbusinessprocessmap> usergroupbusinessprocessmaps, Set<Wfheader> wfheaders,
			Set<Userandusergroupmap> userandusergroupmaps,
			Set<Issuesolutionmappingusergroupemail> issuesolutionmappingusergroupemails, Set<Wfline> wflines) {
		this.name = name;
		this.section = section;
		this.department = department;
		this.division = division;
		this.emailId = emailId;
		this.escalationEmailId = escalationEmailId;
		this.active = active;
		this.createdby = createdby;
		this.createddate = createddate;
		this.updatedby = updatedby;
		this.updateddate = updateddate;
		this.tickethopsesForNextUserGroupId = tickethopsesForNextUserGroupId;
		this.usergrouppageaccesses = usergrouppageaccesses;
		this.slatasklevelsForGroupFrom = slatasklevelsForGroupFrom;
		this.userbtobsubgroupsForMainUserGroupId = userbtobsubgroupsForMainUserGroupId;
		this.slatasklevelsForGroupTo = slatasklevelsForGroupTo;
		this.tickethopsesForPreviousUserGroupId = tickethopsesForPreviousUserGroupId;
		this.userbtobsubgroupsForUserSubGroupId = userbtobsubgroupsForUserSubGroupId;
		this.usergroupbusinessprocessmaps = usergroupbusinessprocessmaps;
		this.wfheaders = wfheaders;
		this.userandusergroupmaps = userandusergroupmaps;
		this.issuesolutionmappingusergroupemails = issuesolutionmappingusergroupemails;
		this.wflines = wflines;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "UserGroupID", unique = true, nullable = false)
	public Integer getUserGroupId() {
		return this.userGroupId;
	}

	public void setUserGroupId(Integer userGroupId) {
		this.userGroupId = userGroupId;
	}

	@Column(name = "Name", nullable = false, length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "Section", length = 100)
	public String getSection() {
		return this.section;
	}

	public void setSection(String section) {
		this.section = section;
	}

	@Column(name = "Department", length = 200)
	public String getDepartment() {
		return this.department;
	}

	public void setDepartment(String department) {
		this.department = department;
	}

	@Column(name = "Division", length = 200)
	public String getDivision() {
		return this.division;
	}

	public void setDivision(String division) {
		this.division = division;
	}

	@Column(name = "EmailID", length = 100)
	public String getEmailId() {
		return this.emailId;
	}

	public void setEmailId(String emailId) {
		this.emailId = emailId;
	}

	@Column(name = "EscalationEmailID", nullable = false, length = 100)
	public String getEscalationEmailId() {
		return this.escalationEmailId;
	}

	public void setEscalationEmailId(String escalationEmailId) {
		this.escalationEmailId = escalationEmailId;
	}

	@Column(name = "Active", length = 20)
	public String getActive() {
		return this.active;
	}

	public void setActive(String active) {
		this.active = active;
	}

	@Column(name = "Createdby", length = 100)
	public String getCreatedby() {
		return this.createdby;
	}

	public void setCreatedby(String createdby) {
		this.createdby = createdby;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Createddate", length = 19)
	public Date getCreateddate() {
		return this.createddate;
	}

	public void setCreateddate(Date createddate) {
		this.createddate = createddate;
	}

	@Column(name = "Updatedby", length = 100)
	public String getUpdatedby() {
		return this.updatedby;
	}

	public void setUpdatedby(String updatedby) {
		this.updatedby = updatedby;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Updateddate", length = 19)
	public Date getUpdateddate() {
		return this.updateddate;
	}

	public void setUpdateddate(Date updateddate) {
		this.updateddate = updateddate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usergroupByNextUserGroupId")
	@JsonIgnore
	public Set<Tickethops> getTickethopsesForNextUserGroupId() {
		return this.tickethopsesForNextUserGroupId;
	}

	public void setTickethopsesForNextUserGroupId(Set<Tickethops> tickethopsesForNextUserGroupId) {
		this.tickethopsesForNextUserGroupId = tickethopsesForNextUserGroupId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usergroup")
	@JsonIgnore
	public Set<Usergrouppageaccess> getUsergrouppageaccesses() {
		return this.usergrouppageaccesses;
	}

	public void setUsergrouppageaccesses(Set<Usergrouppageaccess> usergrouppageaccesses) {
		this.usergrouppageaccesses = usergrouppageaccesses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usergroupByGroupFrom")
	@JsonIgnore
	public Set<Slatasklevel> getSlatasklevelsForGroupFrom() {
		return this.slatasklevelsForGroupFrom;
	}

	public void setSlatasklevelsForGroupFrom(Set<Slatasklevel> slatasklevelsForGroupFrom) {
		this.slatasklevelsForGroupFrom = slatasklevelsForGroupFrom;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usergroupByMainUserGroupId")
	@JsonIgnore
	public Set<Userbtobsubgroup> getUserbtobsubgroupsForMainUserGroupId() {
		return this.userbtobsubgroupsForMainUserGroupId;
	}

	public void setUserbtobsubgroupsForMainUserGroupId(Set<Userbtobsubgroup> userbtobsubgroupsForMainUserGroupId) {
		this.userbtobsubgroupsForMainUserGroupId = userbtobsubgroupsForMainUserGroupId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usergroupByGroupTo")
	@JsonIgnore
	public Set<Slatasklevel> getSlatasklevelsForGroupTo() {
		return this.slatasklevelsForGroupTo;
	}

	public void setSlatasklevelsForGroupTo(Set<Slatasklevel> slatasklevelsForGroupTo) {
		this.slatasklevelsForGroupTo = slatasklevelsForGroupTo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usergroupByPreviousUserGroupId")
	@JsonIgnore
	public Set<Tickethops> getTickethopsesForPreviousUserGroupId() {
		return this.tickethopsesForPreviousUserGroupId;
	}

	public void setTickethopsesForPreviousUserGroupId(Set<Tickethops> tickethopsesForPreviousUserGroupId) {
		this.tickethopsesForPreviousUserGroupId = tickethopsesForPreviousUserGroupId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usergroupByUserSubGroupId")
	@JsonIgnore
	public Set<Userbtobsubgroup> getUserbtobsubgroupsForUserSubGroupId() {
		return this.userbtobsubgroupsForUserSubGroupId;
	}

	public void setUserbtobsubgroupsForUserSubGroupId(Set<Userbtobsubgroup> userbtobsubgroupsForUserSubGroupId) {
		this.userbtobsubgroupsForUserSubGroupId = userbtobsubgroupsForUserSubGroupId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usergroup")
	@JsonIgnore
	public Set<Usergroupbusinessprocessmap> getUsergroupbusinessprocessmaps() {
		return this.usergroupbusinessprocessmaps;
	}

	public void setUsergroupbusinessprocessmaps(Set<Usergroupbusinessprocessmap> usergroupbusinessprocessmaps) {
		this.usergroupbusinessprocessmaps = usergroupbusinessprocessmaps;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usergroup")
	@JsonIgnore
	public Set<Wfheader> getWfheaders() {
		return this.wfheaders;
	}

	public void setWfheaders(Set<Wfheader> wfheaders) {
		this.wfheaders = wfheaders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usergroup")
	@JsonIgnore
	public Set<Userandusergroupmap> getUserandusergroupmaps() {
		return this.userandusergroupmaps;
	}

	public void setUserandusergroupmaps(Set<Userandusergroupmap> userandusergroupmaps) {
		this.userandusergroupmaps = userandusergroupmaps;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usergroup")
	@JsonIgnore
	public Set<Issuesolutionmappingusergroupemail> getIssuesolutionmappingusergroupemails() {
		return this.issuesolutionmappingusergroupemails;
	}

	public void setIssuesolutionmappingusergroupemails(
			Set<Issuesolutionmappingusergroupemail> issuesolutionmappingusergroupemails) {
		this.issuesolutionmappingusergroupemails = issuesolutionmappingusergroupemails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usergroup")
	@JsonIgnore
	public Set<Wfline> getWflines() {
		return this.wflines;
	}

	public void setWflines(Set<Wfline> wflines) {
		this.wflines = wflines;
	}

}
